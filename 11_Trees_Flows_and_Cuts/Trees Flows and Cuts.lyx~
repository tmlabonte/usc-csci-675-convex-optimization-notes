#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\begin_modules
theorems-ams
algolyx
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Trees, Flows, and Cuts
\end_layout

\begin_layout Section
Minimum Spanning Trees
\end_layout

\begin_layout Subsection
Minimum Spanning Tree (MST) Problem
\end_layout

\begin_layout Problem*
Given a connected, undirected graph 
\begin_inset Formula $G=(V,E)$
\end_inset

 and costs 
\begin_inset Formula $c_{e}$
\end_inset

 on each edge 
\begin_inset Formula $e\in E$
\end_inset

, find a minimum cost spanning tree of 
\begin_inset Formula $G$
\end_inset

.
\end_layout

\begin_layout Standard
We let 
\begin_inset Formula $n=|V|$
\end_inset

 and 
\begin_inset Formula $m=|E|$
\end_inset

.
 This problem can be solved efficiently by Kruskal's Algorithm:
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Algorithm
* 
\begin_inset Formula $T=\emptyset$
\end_inset


\end_layout

\begin_layout Algorithm
* Sort edges in order of increasing cost
\end_layout

\begin_layout Algorithm
for each edge 
\begin_inset Formula $e$
\end_inset

 in order
\end_layout

\begin_deeper
\begin_layout Algorithm
if 
\begin_inset Formula $T\bigcup e$
\end_inset

 is acyclic
\end_layout

\begin_deeper
\begin_layout Algorithm
* 
\begin_inset Formula $T=T\bigcup e$
\end_inset


\end_layout

\end_deeper
\begin_layout Algorithm
endif
\end_layout

\end_deeper
\begin_layout Algorithm
endfor
\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Kruskal's Algorithm
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
MST LP
\end_layout

\begin_layout Standard
By allowing fractional MSTs, we have the MST LP:
\begin_inset Formula 
\begin{align*}
\min\text{ } & \sum_{e\in E}c_{e}x_{e}\\
\text{s.t. } & \sum_{e\in E}x_{e}=n-1\\
 & \sum_{e\subseteq X}x_{e}\leq|X|-1\text{ }\forall X\subset V\\
 & x_{e}\geq0\text{ }\forall e\in E
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
The interpretation of this LP is that we wish to minimize the total cost
 of the fractional MST where the first constraint encodes that the tree
 must have 
\begin_inset Formula $n-1$
\end_inset

 edges, the second constraint encode that 
\begin_inset Formula $G$
\end_inset

 is acyclic, and the third constraint forces the 
\begin_inset Formula $x_{e}$
\end_inset

 to be positive.
\end_layout

\begin_layout Theorem
The feasible region of the above LP is the convex hull of spanning trees.
\end_layout

\begin_layout Proof
By finding a dual solution with cost matching the output of Kruskal's Algorithm.
\end_layout

\begin_layout Standard
Note that this LP has exponential (in 
\begin_inset Formula $n$
\end_inset

) constraints.
 Thus we need an efficient separation oracle (an algorithm which, given
 an input vector, either certifies that it is in the feasible region or
 identifies a violated constraint) to solve it efficiently.
 In this case, our separation oracle must find a nonempty 
\begin_inset Formula $X\subset V$
\end_inset

 with 
\begin_inset Formula $\sum_{e\subseteq X}x_{e}>|X|-1$
\end_inset

, if such an 
\begin_inset Formula $X$
\end_inset

 exists.
 We can do this by minimizing 
\begin_inset Formula $|X|-\sum_{e\subseteq X}x_{e}$
\end_inset

 and checking if it is less than one, which is efficient using submodular
 minimization.
\end_layout

\begin_layout Subsection
Application of MST LP
\end_layout

\begin_layout Standard
It seems unintuitive to solve for a fractional MST, but it is useful when
 designing robust MSTs via a randomized selection algorithm, perhaps to
 foil hackers.
 Fix some probability 
\begin_inset Formula $p$
\end_inset

, the maximum probability with which you want to select any edge in the
 graph (perhaps 
\begin_inset Formula $p=0.1$
\end_inset

).
 Then, we have the robust MST LP:
\begin_inset Formula 
\begin{align*}
\min\text{ } & \sum_{e\in E}c_{e}x_{e}\\
\text{s.t. } & \sum_{e\in E}x_{e}=n-1\\
 & \sum_{e\subseteq X}x_{e}\leq|X|-1\text{ }\forall X\subset V\\
 & x_{e}\leq p\text{ }\forall e\in E\\
 & x_{e}\geq0\text{ }\forall e\in E
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
The interpretation of this LP is that the fractional MST can be interpreted
 as a probability distribution over integral MSTs â€“ we know that a solution
 to this LP must exist! Evidently, 
\begin_inset Formula $\boldsymbol{x}$
\end_inset

 is in the original MST LP polytope.
 By Caratheodory's Theorem, 
\begin_inset Formula $\boldsymbol{x}$
\end_inset

 is a convex combination of 
\begin_inset Formula $m+1$
\end_inset

 vertices of the MST polytope.
 Then by the integrality of those vertices, 
\begin_inset Formula $\boldsymbol{x}$
\end_inset

 is the expectation of a probability distribution over spanning trees.
\end_layout

\begin_layout Section
Maximum Flows
\end_layout

\begin_layout Subsection
Maximum Flow LP
\end_layout

\begin_layout Problem*
Given a directed graph 
\begin_inset Formula $G=(V,E)$
\end_inset

 with capacities 
\begin_inset Formula $u_{e}$
\end_inset

 on each edge 
\begin_inset Formula $e$
\end_inset

 and source/sink nodes 
\begin_inset Formula $s,t\in V$
\end_inset

, find the maximum flow from 
\begin_inset Formula $s\rightarrow t$
\end_inset

 respecting the capacities.
\end_layout

\begin_layout Standard
By allowing fractional flows, we obtain the LP:
\begin_inset Formula 
\begin{align*}
\max\text{ } & \sum_{e\in\delta^{+}(s)}x_{e}-\sum_{e\in\delta^{-}(s)}x_{e}\\
 & \sum_{e\in\delta^{+}(s)}x_{e}=\sum_{e\in\delta^{-}(s)}x_{e}\text{ }\forall v\in V\setminus\{s,t\}\\
 & x_{e}\leq u_{e}\text{ }\forall e\in E\\
 & x_{e}\geq0\text{ }\forall e\in E
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
The interpretation of this LP is that we wish to maximize the amount of
 flow from 
\begin_inset Formula $s$
\end_inset

 to 
\begin_inset Formula $t$
\end_inset

 while obeying conversation of flow (constraint 1), edge capacities (constraint
 2), and positive flow (constraint 3).
 Taking the dual LP:
\begin_inset Formula 
\begin{align*}
\min\text{ } & \sum_{e\in E}u_{e}z_{e}\\
\text{s.t. } & y_{v}-y_{u}\leq z_{e}\text{ }\forall e=(u,v)\in E\\
 & y_{s}=0\\
 & y_{t}=1\\
 & z_{e}\geq0\text{ }\forall e\in E
\end{align*}

\end_inset

The interpretation of this LP is that 
\begin_inset Formula $z_{e}$
\end_inset

 describes the fraction of each edge to cut, while cutting at least one
 edge on every path from 
\begin_inset Formula $s\rightarrow t$
\end_inset

.
 We minimize the total capacity of this cut, and recognize that the dual
 LP therefore encodes the minimum cut problem.
 Every integral 
\begin_inset Formula $s\rightarrow t$
\end_inset

 cut is feasible, and strong duality implies the equivalence of maximum
 flow and minimum cut.
 Furthermore, the Ford-Fulkerson Algorithm shows that there exists an integral
 maximum flow when the edge capacities are integer.
\end_layout

\begin_layout Subsection
Generalizations
\end_layout

\begin_layout Standard
Encoding a combinatorial problem as an LP allows us to easily extend it
 to more general situations.
 In the case of maximum flow, it is easy to write upper and lower bounds
 on the flow for each edge, find the minimum cost flow of at least a certain
 amount, encode commodity sharing, and so on.
 In particular, by extending this problem from an LP to a convex program,
 we can encode the minimum congestion flow problem.
 Here, we are given congestion functions 
\begin_inset Formula $c_{e}(\cdot)$
\end_inset

 on each edge 
\begin_inset Formula $e$
\end_inset

, and we want to find the minimum average congestion flow from 
\begin_inset Formula $s\rightarrow t$
\end_inset

:
\begin_inset Formula 
\begin{align*}
\min\text{ } & \sum_{e\in E}x_{e}c_{e}(x_{e})\\
 & \sum_{e\in\delta^{+}(s)}x_{e}-\sum_{e\in\delta^{-}(s)}x_{e}\text{ }\forall v\in V\setminus\{s,t\}\\
 & \sum_{e\in\delta^{+}(s)}x_{e}-\sum_{e\in\delta^{-}(s)}x_{e}=r\\
 & x_{e}\geq0\text{ }\forall e\in E
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Note that this is a convex program when the 
\begin_inset Formula $c_{e}(\cdot)$
\end_inset

 are polynomials with non-negative coefficients.
\end_layout

\begin_layout Section
Maximum Cuts
\end_layout

\end_body
\end_document
